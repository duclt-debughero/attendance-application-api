services:
    attendance-application-api:
        container_name: attendance-application-api
        image: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_ECR_REPOSITORY}"
        build:
            context: .
            dockerfile: ./docker/Dockerfile
            args:
                user: ${APP_USER:-attendance-application}
                uid: ${APP_UID:-1000}
        ports:
            - '${APP_PORT:-80}:80'
        restart: always
        volumes:
            - ./:/var/www/html
        networks:
            - attendance-application-network

    attendance-application-api-dev:
        container_name: attendance-application-api-dev
        build:
            context: .
            dockerfile: ./docker/Dockerfile.dev
            args:
                user: ${APP_USER:-attendance-application}
                uid: ${APP_UID:-1000}
        ports:
            - '${APP_PORT:-80}:80'
        volumes:
            - ./:/var/www/html
        networks:
            - attendance-application-network

    # database:
    #     container_name: attendance-application-database
    #     image: mysql:8.0
    #     ports:
    #         - '${DB_PORT:-3306}:3306'
    #     restart: always
    #     environment:
    #         MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    #         MYSQL_DATABASE: ${DB_DATABASE}
    #         MYSQL_USER: ${DB_USERNAME}
    #         MYSQL_PASSWORD: ${DB_PASSWORD}
    #     volumes:
    #         - database-data:/var/lib/mysql
    #     networks:
    #         - attendance-application-network
    #     healthcheck:
    #         test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    #         interval: 10s
    #         timeout: 5s
    #         retries: 5

# Networks
networks:
    attendance-application-network:
        driver: bridge

# Volumes
# volumes:
#     database-data: ~
